클래스 프로그래밍 작업 순서
1. 어떤 형태의 설계인지 구분
=> 상속인지 아닌지 (상속(is A), has A ...)
=> 다형성(부모의 형태로 자식의 형태를 생성하는 것(가상 함수))
ex) virtual void Method() {};

=> 추상화(순수 가상 함수 구현)
순수 가상 함수의 경우 물려받는 쪽(자식 클래스)에서 반드시 해당 함수에 대한 오버로딩을 진행해야 클래스를 구현할 수 있습니다.(제약)
ex) virtual void Method() = 0;

2. 필드 / 생성자 / 메소드 / 
연산자 오버로딩 / 소멸자 순으로 필요한 부분을 배치합니다.

3. 접근 제한 지시자에 대한 설정 후
   재배치 ( private , protected , public)

4. 메인 함수에  클래스 객체 생성 (정적 생성 , 동적 생성(new))

5. 메인 프로그램에서 매개변수로 클래스를 요구하는 함수
사용 여부(써도 되고 안써도 됨.)

6. 메인 함수에서 클래스를 기반으로 로직 설계 