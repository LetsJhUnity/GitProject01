2024-04-13
연산자 오버로딩

이해를 위한 기본 지식
1. 연산자 : 연산할 때 쓰이는 기호
기호마다 요구되는 값의 개수 -> 항
2. 클래스 : 멤버 변수와 멤버 함수를 가지고 있는 사용자 정의 타입
	 클래스를 통해 객체를 만들 수 있고, 그 객체를 중심으로
	 프로그램을 구성할 수 있습니다.
	클래스는 value(값)가 아닌 reference(참조) 형태입니다.
 	this : 자기 자신을 의미합니다.
	생성자 / 소멸자...
3. 오버로딩 : 같은 이름에 다른 기능
	    프로그램에서는 매개변수의 개수, 순서, 형태 => method signature(메소드 시그니처)
	    가 다르면 다른 것으로 판단합니다.

4. 포인터  : Asterisk(*) : 해당 기호는 변수 앞에 붙을 경우 주소 값을 참조해 실제 값을 얻어오는 기능을
		    가진 참조 연산자로 사용됩니다.
	  주소 : 데이터가 프로그램 메모리의 실제로 저장되어 있는 위치(포인터가 가리키는 것)
5. 함수    : 작업만 진행하는 경우 -> void 설계, return 안써도 됨.
	  그 이외의 형태일 경우 -> return 함수